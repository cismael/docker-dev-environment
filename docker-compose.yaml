version: '3.9'

services:

  # Jenkins ##################################################################################
  jenkins:
    build:
      context: ./jenkins
    ports:
      - "${JENKINS_PORT_1}:8080"
      - "${JENKINS_PORT_2}:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
#      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 3G
    restart: always

  # Sonarqube ##################################################################################
  sonarqube:
    #user: 1004:1004
    image: sonarqube:9.9.0-community
    ports:
      - "${SONARQUBE_PORT}:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/${SONAR_JDBC_DATABASE}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
      #- sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
      #- sonar.jdbc.username=sonar
      #- sonar.jdbc.password=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    deploy:
      resources:
        limits:
          memory: 3G
    restart: always

  # MongoDB ##################################################################################
  mongo:
    image: mongo:5.0.14
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    deploy:
      resources:
        limits:
          memory: 700M
    restart: always
    
  mongo-express:
    image: mongo-express:latest
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGODB_PORT}/
    deploy:
      resources:
        limits:
          memory: 350M
    restart: always
    depends_on:
      - "mongo"

  # PostGres ##################################################################################
  postgresql:
    image: postgres:14.7
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 700M
    restart: always

  # MariaDB ###################################################################################
  mariadb:
    image: mariadb:latest
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}    
    volumes:
      - mariadb_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          memory: 700M
    restart: always

  # PhpMyAdmin ################################################################################
  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      - PMA_ARBITRARY=1
    deploy:
      resources:
        limits:
          memory: 350M
    restart: always
    depends_on:
      - "mariadb"

  # Adminer ###################################################################################
  # Alternative to phpmyadmin
  adminer:
    image: adminer:latest
    ports:
      - ${ADMINER_PORT}:8080
    deploy:
      resources:
        limits:
          memory: 350M
    restart: always
    depends_on:
      - "mariadb"

  # Kanboard ################################################################################
  kanboard:
    image: kanboard/kanboard:latest
    ports:
      - "${KANBOARD_PORT}:80"
      #- "443:443"
    environment:
      DATABASE_URL: mysql://${KANBOARD_USER}:${KANBOARD_PASSWORD}@mariadb/${KANBOARD_DATABASE}
    volumes:
      - kanboard_data:/var/www/app/data
      - kanboard_plugins:/var/www/app/plugins
      - kanboard_ssl:/etc/nginx/ssl
    deploy:
      resources:
        limits:
          memory: 700M
    restart: always
    depends_on:
      - "mariadb"

  # RabbitMQ ###############################################################################
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      resources:
        limits:
          memory: 350M
    restart: always

volumes:
  # Jenkins volume #########################################################################
  jenkins_home:

  # Sonarqube volumes ######################################################################
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:

  # MongoDB volume #########################################################################
  mongodb_data:

  # PostgreSql volume ###########################################################################
  postgresql:
  postgresql_data:

  # MariaDb volume #########################################################################
  mariadb_data:

  # Kanboard volumes #######################################################################
  kanboard_data:
  kanboard_plugins:
  kanboard_ssl: